# Generated by Django 5.2 on 2025-04-10 15:34

import api.models.user
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CryptoAsset',
            fields=[
                ('CryptoAssetId', models.AutoField(primary_key=True, serialize=False)),
                ('symbol', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('current_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('market_cap', models.DecimalField(decimal_places=2, max_digits=25)),
                ('change_24h', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('Userid', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', api.models.user.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('ChatMessageId', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('is_user_message', models.BooleanField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NewsArticle',
            fields=[
                ('NewsArticleId', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('source', models.CharField(max_length=255)),
                ('published_at', models.DateTimeField()),
                ('url', models.URLField()),
                ('crypto_asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.cryptoasset')),
            ],
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('UserFeedbackId', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('feedback_type', models.CharField(choices=[('suggestion', 'Suggestion'), ('problem', 'Problem'), ('comment', 'Comment')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WatchList',
            fields=[
                ('WatchListid', models.AutoField(primary_key=True, serialize=False)),
                ('crypto_asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.cryptoasset')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
